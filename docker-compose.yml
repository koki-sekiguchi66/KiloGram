services:
  db:
    image: postgres:16-alpine
    container_name: kilogram_db
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - kilogram_network

  redis:
    image: redis:7-alpine
    container_name: kilogram_redis
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - kilogram_network

  backend:
    build:
      context: ./KiloGram
      dockerfile: Dockerfile
      target: development
    container_name: kilogram_backend
    command: >
      sh -c "
        python manage.py migrate &&
        python manage.py load_standard_foods /app/data/standard_foods.csv &&
        python manage.py runserver 0.0.0.0:8000 
      "
    volumes:
      - ./KiloGram:/app
    ports:
      - "8000:8000"
    env_file:
      - ./KiloGram/.env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - kilogram_network

  celery:
    build:
      context: ./KiloGram
      dockerfile: Dockerfile
      target: development
    container_name: kilogram_celery
    command: celery -A kilogram_project worker -l info
    volumes:
      - ./KiloGram:/app
    env_file:
      - ./KiloGram/.env
    depends_on:
      - backend
      - redis
    networks:
      - kilogram_network

  celery-beat:
    build:
      context: ./KiloGram
      dockerfile: Dockerfile
      target: development
    container_name: kilogram_celery_beat
    command: celery -A kilogram_project beat -l info
    volumes:
      - ./KiloGram:/app
    env_file:
      - ./KiloGram/.env
    depends_on:
      - backend
      - redis
    networks:
      - kilogram_network

  frontend:
    build:
      context: ./kilogram-app
      dockerfile: Dockerfile
      target: development
    container_name: kilogram_frontend
    volumes:
      - ./kilogram-app:/app
      - /app/node_modules
    ports:
      - "5173:5173"
    depends_on:
      - backend
    networks:
      - kilogram_network

volumes:
  postgres_data:

networks:
  kilogram_network:
    driver: bridge