version: '3.8'

services:
  db:
    image: postgres:16-alpine
    container_name: kilogram_db
    environment:
      POSTGRES_DB: kilogram_db
      POSTGRES_USER: kilogram_user
      POSTGRES_PASSWORD: koki1101
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U kilogram_user -d kilogram_db"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - kilogram_network

  redis:
    image: redis:7-alpine
    container_name: kilogram_redis
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - kilogram_network

  backend:
    build:
      context: ./KiloGram
      dockerfile: Dockerfile
      target: development  # 開発ステージを指定
    container_name: kilogram_backend
    command: >
      sh -c "
        python manage.py migrate &&
        python manage.py runserver 0.0.0.0:8000
      "
    volumes:
      - ./KiloGram:/app
    ports:
      - "8000:8000"
    environment:
      - DEBUG=True
      - SECRET_KEY=your-secret-key-here-change-in-production
      - DB_NAME=kilogram_db
      - DB_USER=kilogram_user
      - DB_PASSWORD=koki1101
      - DB_HOST=db
      - DB_PORT=5432
      - ALLOWED_HOST=localhost,127.0.0.1
      - CORS_ALLOWED_ORIGINS=http://localhost:5173,http://127.0.0.1:5173
      - CSRF_TRUSTED_ORIGINS=http://localhost:5173,http://127.0.0.1:5173
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - kilogram_network

  celery:
    build:
      context: ./KiloGram
      dockerfile: Dockerfile
      target: development
    container_name: kilogram_celery
    command: celery -A kilogram_project worker -l info
    volumes:
      - ./KiloGram:/app
    environment:
      - DEBUG=True
      - SECRET_KEY=your-secret-key-here-change-in-production
      - DB_NAME=kilogram_db
      - DB_USER=kilogram_user
      - DB_PASSWORD=koki1101
      - DB_HOST=db
      - DB_PORT=5432
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      - backend
      - redis
    networks:
      - kilogram_network

  celery-beat:
    build:
      context: ./KiloGram
      dockerfile: Dockerfile
      target: development
    container_name: kilogram_celery_beat
    command: celery -A kilogram_project beat -l info
    volumes:
      - ./KiloGram:/app
    environment:
      - DEBUG=True
      - SECRET_KEY=your-secret-key-here-change-in-production
      - DB_NAME=kilogram_db
      - DB_USER=kilogram_user
      - DB_PASSWORD=koki1101
      - DB_HOST=db
      - DB_PORT=5432
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      - backend
      - redis
    networks:
      - kilogram_network

  frontend:
    build:
      context: ./kilogram-app
      dockerfile: Dockerfile
      target: development  # 開発ステージを指定
    container_name: kilogram_frontend
    volumes:
      - ./kilogram-app:/app
      - /app/node_modules
    ports:
      - "5173:5173"
    environment:
      - VITE_API_URL=http://localhost:8000/api
    depends_on:
      - backend
    networks:
      - kilogram_network

volumes:
  postgres_data:

networks:
  kilogram_network:
    driver: bridge