version: '3.8'

services:
  backend:
    build:
      context: ./KiloGram
      dockerfile: Dockerfile.production
    container_name: kilogram_backend
    restart: unless-stopped
    volumes:
      - ./KiloGram/logs:/app/logs
      - static_volume:/app/staticfiles
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      - redis
    networks:
      - kilogram_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/health/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  redis:
    image: redis:7-alpine
    container_name: kilogram_redis
    restart: unless-stopped
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - kilogram_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  celery:
    build:
      context: ./KiloGram
      dockerfile: Dockerfile.production
    container_name: kilogram_celery
    command: celery -A kilogram_project worker -l info --concurrency=2
    restart: unless-stopped
    volumes:
      - ./KiloGram/logs:/app/logs
    env_file:
      - .env
    depends_on:
      - backend
      - redis
    networks:
      - kilogram_network

  celery-beat:
    build:
      context: ./KiloGram
      dockerfile: Dockerfile.production
    container_name: kilogram_celery_beat
    command: celery -A kilogram_project beat -l info
    restart: unless-stopped
    volumes:
      - ./KiloGram/logs:/app/logs
    env_file:
      - .env
    depends_on:
      - backend
      - redis
    networks:
      - kilogram_network

  nginx:
    image: nginx:alpine
    container_name: kilogram_nginx
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - static_volume:/app/staticfiles:ro
    depends_on:
      - backend
    networks:
      - kilogram_network

volumes:
  redis_data:
  static_volume:

networks:
  kilogram_network:
    driver: bridge